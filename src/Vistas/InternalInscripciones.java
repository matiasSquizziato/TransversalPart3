/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import AccesoADatos.MateriaData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;




/**
 *
 * @author matiSqui
 */
public class InternalInscripciones extends javax.swing.JInternalFrame {

     private DefaultTableModel modelo = new DefaultTableModel();
    
    //ArrayList
    private ArrayList<Materia> listaMaterias;
    private ArrayList<Alumno> listaAlumnos;
    
    //Acceso a datos
    private InscripcionData inscripData;
    private AlumnoData aluData;
    private MateriaData mateData;
    
    
    
    /**
     * Creates new form InternalInscripciones
     */
    public InternalInscripciones() {
        initComponents();
        
        aluData = new AlumnoData();
        listaAlumnos = (ArrayList<Alumno>) aluData.listarAlumnos();
        
        mateData = new MateriaData();
        listaMaterias = (ArrayList<Materia>) mateData.listarMateria();
        
        inscripData = new InscripcionData();
      
        cargarJcomboBox();
        armarCabecera();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rbMateInscripta = new javax.swing.JRadioButton();
        rbMateNoInscripta = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        btIns = new javax.swing.JButton();
        btAnularIns = new javax.swing.JButton();
        btSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Formulario de Inscripcion a Materias");

        jLabel2.setText("Seleccione un alumno: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Listado de Materias:");

        rbMateInscripta.setText("Materias Inscriptas");
        rbMateInscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMateInscriptaActionPerformed(evt);
            }
        });

        rbMateNoInscripta.setText("Materias no Inscriptas");
        rbMateNoInscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMateNoInscriptaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btIns.setText("Inscribir");
        btIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsActionPerformed(evt);
            }
        });

        btAnularIns.setText("Anular Inscripcion");
        btAnularIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnularInsActionPerformed(evt);
            }
        });

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btIns)
                                .addGap(87, 87, 87)
                                .addComponent(btAnularIns)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btSalir))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMateInscripta)
                            .addComponent(rbMateNoInscripta))
                        .addGap(166, 166, 166))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jcAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(rbMateInscripta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbMateNoInscripta)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btIns)
                    .addComponent(btAnularIns)
                    .addComponent(btSalir))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbMateInscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMateInscriptaActionPerformed

        //Limpio la tabla
        limpiarFilas();
        //Desactivo el otro radioButtom
        rbMateNoInscripta.setSelected(false);
        
        //Desactivo el boton inscribir 
        btIns.setEnabled(false);
        //Activo el boton anular inscripcion
        btAnularIns.setEnabled(true);
        
        //Cargo la tabla con las materias inscriptas
        cargarMateriasIns();

    }//GEN-LAST:event_rbMateInscriptaActionPerformed

    private void rbMateNoInscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMateNoInscriptaActionPerformed

        //Limpio la tabla
        limpiarFilas();
        //Desactivo el otro radioButtom
        rbMateInscripta.setSelected(false);
        
        //Activo el boton inscribir
        btIns.setEnabled(true);
        //Desactivo el boton anular inscripcion
        btAnularIns.setEnabled(false);
        
        //Cargo la tabla con las materias que no estan inscriptas
        cargarMateriasNull();

    }//GEN-LAST:event_rbMateNoInscriptaActionPerformed

    private void btInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsActionPerformed

        int selectRow = jTable1.getSelectedRow();
        
        if (selectRow!= -1) {
            
            Alumno alumSelect = (Alumno) jcAlumnos.getSelectedItem();
            
            //                              fila seleccionada / columna
            int idMateria = (int) modelo.getValueAt(selectRow, 0);
            String nombreMate = (String) modelo.getValueAt(selectRow, 1);
            int anioMate = (int) modelo.getValueAt(selectRow, 2);
            
            Materia mateSelect = new Materia(idMateria, nombreMate, anioMate, true);
            
            Inscripcion incripSelect = new Inscripcion(alumSelect, mateSelect, 10);
            inscripData.guardarInscripciones(incripSelect);
            
            
            
        }

        

    }//GEN-LAST:event_btInsActionPerformed

    private void btAnularInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnularInsActionPerformed

        
        
    int selectRow = jTable1.getSelectedRow();

           if (selectRow!= -1) {

               Alumno alumSelect = (Alumno) jcAlumnos.getSelectedItem();

               //                              fila seleccionada / columna
               int idMateria = (int) modelo.getValueAt(selectRow, 0);
               String nombreMate = (String) modelo.getValueAt(selectRow, 1);
               int anioMate = (int) modelo.getValueAt(selectRow, 2);

               Materia mateSelect = new Materia(idMateria, nombreMate, anioMate, true);

               Inscripcion incripSelect = new Inscripcion(alumSelect, mateSelect, 0);
               inscripData.anularInscripciones(alumSelect.getIdAlumno(), idMateria);



           }  else {
               JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla");
           }


           cargarMateriasNull();

    }//GEN-LAST:event_btAnularInsActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnularIns;
    private javax.swing.JButton btIns;
    private javax.swing.JButton btSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<Alumno> jcAlumnos;
    private javax.swing.JRadioButton rbMateInscripta;
    private javax.swing.JRadioButton rbMateNoInscripta;
    // End of variables declaration//GEN-END:variables

    
    //Cargar el jComboBox
    public void cargarJcomboBox(){
  
        for (Alumno alumno : listaAlumnos) {
       
            jcAlumnos.addItem(alumno);
            
        }
    }
    
    //Armar cabecera
    public void armarCabecera(){
        
    modelo.addColumn("id");
    modelo.addColumn("Nombre");
    modelo.addColumn("Año");
        
    jTable1.setModel(modelo);
       
    }
 
    //Limpiar Filas
    public void limpiarFilas(){
        
        int indice = modelo.getRowCount() -1;
        
        for (int i = indice; i>= 0; i--) {
            modelo.removeRow(i);
            
        }
        
    }
    
    //Mostrar materias no inscriptas
    public void cargarMateriasNull(){
         limpiarFilas();
        Alumno alumnSelect = (Alumno) jcAlumnos.getSelectedItem();
        listaMaterias = (ArrayList<Materia>) inscripData.consultarMateriasInscriptasNull(alumnSelect.getIdAlumno());
        
        for (Materia materia : listaMaterias) {
            
           Object[] fila = new Object[3];
           
           fila[0] = materia.getIdMateria();
           fila[1] = materia.getNombre();
           fila[2] = materia.getAnioMateria();
           
           modelo.addRow(fila);
           
            
        }
    }
    
    //Mostrar materias inscriptas
    public void cargarMateriasIns(){
        limpiarFilas();
        Alumno alumnSelect = (Alumno) jcAlumnos.getSelectedItem();
        List<Materia> listaMate = inscripData.consultarMateriasInscriptas(alumnSelect.getIdAlumno());
        
        for (Materia materia : listaMate) {
            
            Object[] fila = new Object[3];
            
            fila[0] = materia.getIdMateria();
            fila[1] = materia.getNombre();
            fila[2] = materia.getAnioMateria();
            
            modelo.addRow(fila);
            
            
        }
        
        
    }
    
}
