/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import AccesoADatos.MateriaData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matiSqui
 */
public class InternalInscripcionNota extends javax.swing.JInternalFrame {

    
     private DefaultTableModel modelo = new DefaultTableModel();
    
    //ArrayList
    private ArrayList<Materia> listaMaterias;
    private ArrayList<Alumno> listaAlumnos;
    
    //Acceso a datos
    private InscripcionData inscripData;
    private AlumnoData aluData;
    private MateriaData mateData;
    
    /**
     * Creates new form InternalInscripcionNota
     */
    public InternalInscripcionNota() {
        initComponents();
       
                
        aluData = new AlumnoData();
        listaAlumnos = (ArrayList<Alumno>) aluData.listarAlumnos();
        
        mateData = new MateriaData();
        listaMaterias = (ArrayList<Materia>) mateData.listarMateria();
        
        inscripData = new InscripcionData();
      
        
        
         cargarJcomboBox();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jcAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btSetNota = new javax.swing.JButton();
        btSalir = new javax.swing.JButton();
        btVerTabla = new javax.swing.JButton();
        btActualizar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txNota = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Manejo de notas");

        jLabel2.setText("Seleccione el alumno: ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btSetNota.setText("Modificar nota");
        btSetNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSetNotaActionPerformed(evt);
            }
        });

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        btVerTabla.setText("Ver tabla");
        btVerTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerTablaActionPerformed(evt);
            }
        });

        btActualizar.setText("Actualizar vista");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingrese la nota:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(jcAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btVerTabla))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txNota, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btActualizar)
                        .addGap(44, 44, 44)
                        .addComponent(btSetNota)
                        .addGap(51, 51, 51)
                        .addComponent(btSalir)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btVerTabla)))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalir)
                    .addComponent(btSetNota)
                    .addComponent(btActualizar))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVerTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerTablaActionPerformed
    cargarMateriasIns();


    }//GEN-LAST:event_btVerTablaActionPerformed

    private void btSetNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSetNotaActionPerformed
       
       
        int selectRow = jTable1.getSelectedRow();

           if (selectRow!= -1) {


        Alumno alumnSelect = (Alumno) jcAlumnos.getSelectedItem();
             

               //                              fila seleccionada / columna
         
               String nombreMate = (String) modelo.getValueAt(selectRow, 0);
               double notaMate = (double) modelo.getValueAt(selectRow, 1);
               
               
               try{
                   
                   notaMate = Double.parseDouble(txNota.getText());
                   
               } catch(NumberFormatException e) {
                   JOptionPane.showMessageDialog(null, "Ingrese un numero valido para la nota");
                   return;
               }
       
               //este metodo me devuelve un int = idMateria
               int idMate = mateData.buscarMateNombre(nombreMate);
          
               inscripData.updateNotas(alumnSelect.getIdAlumno(), idMate, notaMate);
     
           }  else {
               JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla");
           }

    }//GEN-LAST:event_btSetNotaActionPerformed

    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed

        limpiarFilas();
        cargarMateriasIns();

        txNota.setText("");

    }//GEN-LAST:event_btActualizarActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btSalir;
    private javax.swing.JButton btSetNota;
    private javax.swing.JButton btVerTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<Alumno> jcAlumnos;
    private javax.swing.JTextField txNota;
    // End of variables declaration//GEN-END:variables


      //Cargar el jComboBox
    public void cargarJcomboBox(){
  
        for (Alumno alumno : listaAlumnos) {
       
            jcAlumnos.addItem(alumno);
            
        }
    }
    
    
    public void armarCabecera(){
        
       
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");
        
        jTable1.setModel(modelo);
        
    }
    
      //Limpiar Filas
    public void limpiarFilas(){
        
        int indice = modelo.getRowCount() -1;
        
        for (int i = indice; i>= 0; i--) {
            modelo.removeRow(i);
            
        }
        
    }
    
// Mostrar materias inscriptas
public void cargarMateriasIns() {
    limpiarFilas(); 
    Alumno alumnSelect = (Alumno) jcAlumnos.getSelectedItem();
    List<Inscripcion> listaInsc = inscripData.consultarInscripcionesAlumno(alumnSelect.getIdAlumno());

   
    for (Inscripcion insc : listaInsc) {
        Object[] fila = new Object[2]; 

       
        fila[0] = insc.getMateria().getNombre();    
        fila[1] = insc.getNota();                   

        modelo.addRow(fila); 
    }
}


    
}
